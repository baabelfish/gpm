#!/bin/bash

declare -a PACKAGES
declare -A URLS
declare -A SOURCES
declare -A LINKS
declare -A BUILD
declare -A VERSION

# TPM_DIR = Path where tpm packages are installed to

# TPM_BIN = Path where links are created, user should add this to PATH himself
# Directory should also be completely devoted for TPM as "tpm clean" will delete unnecessary files

function confirm {
        read -r -p "$1 [Y/n] " yes
        yes=${yes,,} # tolower
        [[ $yes =~ ^(yes|y| ) ]]
}

## $1 - url or github suffix
# Convert url to github form
githubify() {
    local regex='^http|^git:'
    if [[ $1 =~ $regex ]]; then
        echo "$1"
    else
        echo "https://github.com/${1}"
    fi
}

# $1 = Pkg name
# $2 = file to source
addSource() {
    SOURCES["$1"]="$2 ${SOURCES["$1"]}"
}

# $1 = Pkg name
# $2 = Target name
# $3 = Source filename
addBin() {
    # Target name has to be unique (but package might have multiple links)
    # index by target name
    LINKS["$2"]="$1 $3"
}

# $1 = Pkg name
# $2 = Command
build() {
    BUILD["$1"]="$2"
}

# $1 = Pkg name
# $2 = Version
version() {
    VERSION["$1"]="$2"
}

# $1 = Pkg name
# $2 = Url
plug() {
    PACKAGES+=($1)
    URLS["$1"]="$2"
}

installPackage() {
    local url=${URLS["$1"]}
    git clone $(githubify $url) $TPM_DIR/$1

    buildPackage $1
}

updatePackage() {
    cd $TPM_DIR/$1
    git pull
    buildPackage $1
}

buildPackage() {
    local build_command=${BUILD["$1"]}
    if [[ -z $build_command ]]; then
        cd $TPM_DIR/$1
        $build_command
    fi
}

commit() {
    for name in ${PACKAGES[@]}; do
        echo "? $name"
        if [[ ! -d $TPM_DIR/$name ]] && confirm "$name is not installed. Install?"; then
            installPackage
        fi

        # If still not installed
        if [[ ! -d $TPM_DIR/$name ]]; then
            echo "$name is not installed?"
        fi

        if [[ -d $TPM_DIR/$name ]]; then
            if [[ -f $TPM_DIR/$name/.tpm.sh ]]; then
                . $TPM_DIR/$name/.tpm.sh
            fi
        fi

        for source in ${SOURCES["$name"]}; do
            echo "source $source"
            source $TPM_DIR/$name/$source
        done
    done

    # Make sure links are created
    for target in ${!LINKS[@]}; do
        local info=(${LINKS["$target"]})
        local pkg=${info[0]}
        local source=${info[1]}

        if [[ -f $TPM_DIR/$pkg/$source ]]; then
            if [[ ! -f $TPM_BIN/$target ]]; then
                echo ln -s $TPM_DIR/$pkg/$source $TPM_BIN/$target
                ln -s $TPM_DIR/$pkg/$source $TPM_BIN/$target
            fi
        fi
    done
}

# CLI, removed old packages and symlinks
clean() {
    echo "foo"
}

# CLI, update packages
update() {
    for pkg in $TPM_DIR/*; do
        updatePackage $pkg
    done
}

# CLI, run command
case $1 in
    'clean')   clean ;;
    'install') install ;;
    'update')  update ;;
    *) ;;
esac

#!/bin/bash
source ./helpers.sh

IFS=$'\n'

COMMAND=''
PACKAGES=()
PARAM_NOCOLOR=0
PARAM_NOCONFIRM=0
PARAM_QUIET=0
PARAM_VERBOSE=0

printHelp() {
    echo "\
Usage: tpm [option] <command>

command := disable [packages] |
           enable [packages]  |
           history [packages] |
           install [packages] |
           list [packages]    |
           remove [packages]  |
           search [packages]  |
           update [packages]  |

option := --help | --nocolor | --noconfirm | --quiet | --verbose
"
exit 1
}

[[ -z $1 ]] && printHelp

setCommand() {
    if [[ ! -z $COMMAND ]]; then
        PACKAGES=("${PACKAGES[@]}" "$C")
    else
        COMMAND=$1
    fi
}

commandDisable() {
    echo "UNDER CONSTRUCTION: commandDisable"
}

commandEnable() {
    echo "UNDER CONSTRUCTION: commandEnable"
}

commandHistory() {
    echo "UNDER CONSTRUCTION: commandHistory"
}

commandInfo() {
    if [[ ${#PACKAGES[@]} -ne 1 ]]; then
        echo "You must provide one package name"
    else
        cd $TPM_PACKAGES/$i
        git log
    fi
}

commandInstall() {
    echo "UNDER CONSTRUCTION: commandInstall"
}

commandList() {
    PACKAGES=($(ls $TPM_PACKAGES))
    for i in ${PACKAGES[@]}; do
        cd $TPM_PACKAGES/$i
        echo -e "${C_PACKAGE_NAME}$i${default}    (${C_PACKAGE_UPDATED}updated${default}: $(git log -1|grep '^Date'|cut -f2- -d':'|sed 's/^ *//g'))"
    done
}

commandRemove() {
    echo "UNDER CONSTRUCTION: commandRemove"
}

commandSearch() {
    echo "UNDER CONSTRUCTION: commandSearch"
}

commandUpdate() {
    echo "UNDER CONSTRUCTION: commandUpdate"
}


for C in ${*}; do
    case $C in
        'disable') setCommand 'disable' ;;
        'enable')  setCommand 'enable' ;;
        'history') setCommand 'history' ;;
        'info')    setCommand 'info' ;;
        'install') setCommand 'install' ;;
        'list')    setCommand 'list' ;;
        'remove')  setCommand 'remove' ;;
        'search')  setCommand 'search' ;;
        'update')  setCommand 'update' ;;
        '--help')
            printHelp
            exit 1
            ;;
        '--nocolor')   PARAM_NOCOLOR=1 ;;
        '--noconfirm') PARAM_NOCONFIRM=1 ;;
        '--quiet')     PARAM_QUIET=1 ;;
        '--verbose')   PARAM_VERBOSE=1 ;;
        *)
            PACKAGES=("${PACKAGES[@]}" "$C")
            ;;
    esac
done

case $COMMAND in
    'disable') commandDisable ;;
    'enable')  commandEnable ;;
    'history') commandHistory ;;
    'info')    commandInfo ;;
    'install') commandInstall ;;
    'list')    commandList ;;
    'remove')  commandRemove ;;
    'search')  commandSearch ;;
    'update')  commandUpdate ;;
    *)
        echo "Invalid command"
        exit 1
        ;;
esac
